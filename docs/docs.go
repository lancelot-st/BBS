// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "XZ",
            "url": "https://lancelot-st.github.io",
            "email": "XZupup4088@163.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/community": {
            "get": {
                "security": [
                    {
                        "ApiKeyAut": []
                    }
                ],
                "description": "获取社区列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "社区相关接口"
                ],
                "summary": "获取社区列表接口",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "CommunityId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "CommunityName",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseData"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "security": [
                    {
                        "ApiKeyAut": []
                    }
                ],
                "description": "用户通过用户名密码进行登录",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "登录相关接口"
                ],
                "summary": "用户登录接口",
                "parameters": [
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maxLength": 16,
                        "minLength": 6,
                        "type": "string",
                        "name": "password",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseData"
                        }
                    }
                }
            }
        },
        "/posts": {
            "post": {
                "security": [
                    {
                        "ApiKeyAut": []
                    }
                ],
                "description": "创建帖子",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "帖子相关接口"
                ],
                "summary": "发布帖子接口",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "author_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "community_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "content",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "create_time",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "排序讲究内存对齐",
                        "name": "post_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "title",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseData"
                        }
                    }
                }
            }
        },
        "/posts/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAut": []
                    }
                ],
                "description": "按帖子发布的时间的从新到旧排列获取帖子列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "帖子相关接口"
                ],
                "summary": "获取帖子列表接口",
                "parameters": [
                    {
                        "type": "string",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseData"
                        }
                    }
                }
            }
        },
        "/posts/list2": {
            "get": {
                "security": [
                    {
                        "ApiKeyAut": []
                    }
                ],
                "description": "按分数的大小从大到小排列获取帖子列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "帖子相关接口"
                ],
                "summary": "获取帖子列表接口",
                "parameters": [
                    {
                        "type": "string",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseData"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "security": [
                    {
                        "ApiKeyAut": []
                    }
                ],
                "description": "用户通过填写用户名密码邮箱进行注册",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "注册相关接口"
                ],
                "summary": "用户注册接口",
                "parameters": [
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maxLength": 16,
                        "minLength": 6,
                        "type": "string",
                        "name": "password",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseData"
                        }
                    }
                }
            }
        },
        "/vote": {
            "post": {
                "security": [
                    {
                        "ApiKeyAut": []
                    }
                ],
                "description": "用户为喜爱或者讨厌的帖子进行投票有赞成票、反对票和放弃",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "投票相关接口"
                ],
                "summary": "用户投票接口",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseData"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ResponseData": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "description": "omitempty当data为空时,不展示这个字段"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "127.0.0.1:8084",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "BBS",
	Description:      "采用redit论坛的算法进行简化版制作的论坛",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
